//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
#include "Tree.h"
#include "MyTask6.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}

void __fastcall TForm1::StringGrid1SelectCell(TObject *Sender, int ACol, int ARow,
		  bool &CanSelect)
{
	CanSelect = false;
}

//при создании формы
void __fastcall TForm1::FormCreate(TObject *Sender)
{
	StringGrid1->Cells[0][0] = "Ф.И.О.";
	StringGrid1->Cells[1][0]="Ключ";
	StringGrid1->Cells[0][1]="Пушкин А.С."; StringGrid1->Cells[1][1]="7";
	StringGrid1->Cells[0][2]="Толстой Л.Н."; StringGrid1->Cells[1][2]="2";
	StringGrid1->Cells[0][3]="Чехов А.П."; StringGrid1->Cells[1][3]="6";
	StringGrid1->Cells[0][4]="Гоголь Н.В."; StringGrid1->Cells[1][4]="9";
	StringGrid1->Cells[0][5]="Лермонтов М.Ю."; StringGrid1->Cells[1][5]="5";
	StringGrid1->Cells[0][6]="Достоевский Ф.М."; StringGrid1->Cells[1][6]="12";
	StringGrid1->Cells[0][7]="Есенин С.А."; StringGrid1->Cells[1][7]="4";
	StringGrid1->Cells[0][8]="Тютчев Ф.И."; StringGrid1->Cells[1][8]="8";
	StringGrid1->Cells[0][9]="Маяковский В.В."; StringGrid1->Cells[1][9]="10";
	StringGrid1->Cells[0][10]="Тургенев И.С."; StringGrid1->Cells[1][10]="1";
}

Tree *tree;
TTree *root;

//Кнопка "Создать (из массива)"
void __fastcall TForm1::Button1Click(TObject *Sender)
{
	TreeView1->Items->Clear();
	Memo1->Clear();
	tree->AddArrayToTree(&root, StringGrid1);
}

//Кнопка "Сбалансировать"
void __fastcall TForm1::Button2Click(TObject *Sender)
{
    if(root == NULL)
	{
		Application->Title = "ВНИМАНИЕ";
		ShowMessage("В дереве нет элементов!");
	}
	else
	{
		Memo1->Clear();
		int size = tree->ListCount(root);
		TInf *array = new TInf[size];
		tree->ReturnBallanced(&root, size, array);
		delete[] array;
        tree->ViewTree(root, -1, TreeView1);
		TreeView1->FullExpand();
	}

}

//Кнопка "Добавить"
void __fastcall TForm1::Button3Click(TObject *Sender)
{
	AnsiString str = Edit2->Text;
	if (Edit1->Text == "" || str == "")
	{
		Application->Title = "ОШИБКА";
		ShowMessage("Введите данные для добавления!");
	}
	else if(str[1] == ' ')
	{
		Edit2->Text = "";
        Application->Title = "ОШИБКА";
		ShowMessage("Введите данные для добавления!");
    }
	else
	{
		TInf inf;
		inf.key = StrToInt(Edit1->Text);
		inf.fio = Edit2->Text;
		tree->AddList(&root, inf);
		Edit1->Text = "";
		Edit2->Text = "";
        TreeView1->Items->Clear();
		Memo1->Clear();
	}
}

//Кнопка "Удалить (по ключу)"
void __fastcall TForm1::Button5Click(TObject *Sender)
{
	if(root == NULL)
	{
		Application->Title = "ВНИМАНИЕ";
		ShowMessage("В дереве нет элементов!");
	}
	else if(Edit1->Text == "")
	{
		Application->Title = "ОШИБКА";
		ShowMessage("Введите ключ для удаления!");
	}
	else
	{
		root = tree->DelInfo(root, StrToInt(Edit1->Text));
		Edit1->Text = "";
		TreeView1->Items->Clear();
		Memo1->Clear();
	}
}

//Кнопка "Найти (по ключу)"
void __fastcall TForm1::Button4Click(TObject *Sender)
{
    if(root == NULL)
	{
		Application->Title = "ВНИМАНИЕ";
		ShowMessage("В дереве нет элементов!");
	}
	else if(Edit1->Text == "")
	{
		Application->Title = "ОШИБКА";
		ShowMessage("Введите ключ для поиска!");
	}
	else
	{
		TreeView1->Items->Clear();
		Memo1->Clear();
		tree->SearchInfo(root, StrToInt(Edit1->Text), Memo1);
        Edit1->Text = "";
	}
}

//Кнопка "В TreeView"
void __fastcall TForm1::Button6Click(TObject *Sender)
{
	if(root == NULL)
	{
		Application->Title = "ВНИМАНИЕ";
		ShowMessage("В дереве нет элементов!");
	}
	else
	{
		TreeView1->Items->Clear();
		Memo1->Clear();
		tree->ViewTree(root, -1, TreeView1);
		TreeView1->FullExpand();
	}
}

//Кнопка "Прямой обход"
void __fastcall TForm1::Button7Click(TObject *Sender)
{
	if(root == NULL)
	{
		Application->Title = "ВНИМАНИЕ";
		ShowMessage("В дереве нет элементов!");
	}
	else
	{
		Memo1->Clear();
		tree->PrPrintTree(&root, Memo1);
	}
}

//Кнопка "Обратный обход"
void __fastcall TForm1::Button8Click(TObject *Sender)
{
    if(root == NULL)
	{
		Application->Title = "ВНИМАНИЕ";
		ShowMessage("В дереве нет элементов!");
	}
	else
	{
		Memo1->Clear();
		tree->ObPrintTree(&root, Memo1);
	}
}

//Кнопка "Симметричный обход"
void __fastcall TForm1::Button9Click(TObject *Sender)
{
	if(root == NULL)
	{
		Application->Title = "ВНИМАНИЕ";
		ShowMessage("В дереве нет элементов!");
	}
	else
	{
		Memo1->Clear();
		tree->SimPrintTree(&root, Memo1);
	}
}

//Кнопка "Свой вариант"
void __fastcall TForm1::Button10Click(TObject *Sender)
{
    if(root == NULL)
	{
		Application->Title = "ВНИМАНИЕ";
		ShowMessage("В дереве нет элементов!");
	}
	else
	{
		Application->Title = "УСЛОВИЕ";
		ShowMessage("6. Удалить из левой ветви дерева узел с максимальным"
			" значением ключа и все связанные с ним узлы."
			"\n\nДанное задание можно понимать двояко:"
			"\n1. Удалить ЦЕЛИКОМ поддерево с \"корнем\" в max узле;"
			"\n2. Удалить ТОЛЬКО непосредственно \"связанные с ним узлы\" - значит"
			" только левый (т.к. если у узла есть правый, то он не максимальный)."
			"\n\nДанная кнопка реализует 1 вариант (2 вариант реализует закоменти"
			"рованная идентичная по названию функция в том же классе MyTask)");
		TreeView1->Items->Clear();
		Memo1->Clear();
		MyTask *myTask;
		myTask->DeleteMaxLeftWithConnected(&root, Memo1);
		tree->ViewTree(root, -1, TreeView1);
		TreeView1->FullExpand();
	}
}

//Кнопка "Выход"
void __fastcall TForm1::Button11Click(TObject *Sender)
{
	tree->DeleteTree(&root);
	Memo1->Clear();
	TreeView1->Items->Clear();
	Close();
}

